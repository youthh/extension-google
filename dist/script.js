(()=>{"use strict";var __webpack_modules__={607:()=>{eval('\r\nlet HtmlElements = [\r\n    document.querySelectorAll("input"),\r\n    document.querySelectorAll(\'[contenteditable=true]\'),\r\n    document.querySelectorAll(\'textarea\'),\r\n    document.querySelectorAll(\'iframe\'),\r\n];\r\nlet dictionary = [\r\n    {\r\n        mainWord: "Cat",\r\n        replaceWordFirst: "Dog",\r\n        replaceWordSecond: "Rat",\r\n        replaceWordThird: "bat",\r\n    },\r\n    {\r\n        mainWord: "Helo",\r\n        replaceWordFirst: "hello",\r\n        replaceWordSecond: "Help",\r\n        replaceWordThird: "Hell",\r\n    },\r\n    {\r\n        mainWord: "heldp",\r\n        replaceWordFirst: "help",\r\n        replaceWordSecond: "held",\r\n        replaceWordThird: "hello",\r\n    }\r\n];\r\nlet isOpen = false;\r\nlet x = 0;\r\nlet y = 0;\r\ndocument.body.addEventListener(\'mousemove\', function (e) {\r\n    y = e.clientY;\r\n    x = e.clientX;\r\n});\r\nconst removeMenu = () => {\r\n    let menu = document.getElementById(\'menu_text\');\r\n    let style = document.getElementById(\'menu_style\');\r\n    isOpen = false;\r\n    document.body.removeChild(menu);\r\n    document.body.removeChild(style);\r\n};\r\nconst makeReplacement = (i, p, element) => {\r\n    isOpen = true;\r\n    if (!document.body.contains(document.getElementById(\'menu_text\'))) {\r\n        createPopUpInfo(true, i.replaceWordFirst, i.replaceWordSecond, i.replaceWordThird);\r\n    }\r\n    let links = document.querySelectorAll(".chose_box-btn");\r\n    let btn = document.getElementById("btn");\r\n    btn.addEventListener(\'click\', () => {\r\n        removeMenu();\r\n    });\r\n    links.forEach((v) => {\r\n        v.addEventListener("click", (l) => {\r\n            l.preventDefault();\r\n            let sent;\r\n            if (p.target.nodeName === "INPUT" || p.target.nodeName === "TEXTAREA") {\r\n                sent = p.target.value.split(\' \');\r\n                let index = sent.indexOf(i.mainWord);\r\n                sent.splice(index, 1, l.target.innerText.toString());\r\n                p.target.value = sent.join(\' \');\r\n            }\r\n            else {\r\n                sent = p.target.innerText.split(\' \');\r\n                let index = p.target.innerText.split(\' \').indexOf(i.mainWord);\r\n                sent.splice(index, 1, l.target.innerText);\r\n                p.target.innerText = sent.join(\' \');\r\n            }\r\n            removeMenu();\r\n            element.focus();\r\n        });\r\n    });\r\n};\r\n// @ts-ignore\r\nconst changeWord = (sentence, p, word, element) => {\r\n    dictionary.forEach((i) => {\r\n        if (word === i.mainWord && p.type === "click") {\r\n            makeReplacement(i, p, element);\r\n        }\r\n        else if (p.type === \'keypress\') {\r\n            sentence.forEach((words) => {\r\n                if (words === i.mainWord && !isOpen) {\r\n                    makeReplacement(i, p, element);\r\n                }\r\n            });\r\n        }\r\n    });\r\n};\r\nconst createPopUpInfo = (isShow, var1, var2, var3) => {\r\n    const div = document.createElement("div");\r\n    const style = document.createElement(\'style\');\r\n    style.innerHTML = `\n        .container_menu{\n            width: 150px;\n            margin: 10px auto;\n            border-radius: 12px;\n            background: #fff;\n            box-shadow: 0 0 4px 0 rgb(0 0 0 / 30%);\n            display: block;\n            position: absolute;\n            top: ${y}px;\n            left: ${x}px;\n            z-index: 1000;\n        }\n        .choose_box{\n            list-style: none;\n            padding-left: 0;\n            margin: 0;\n        }\n        #btn{\n            padding: 5px 10px;\n            margin: 8px;\n            outline: none;\n            background-color: rgba(70, 0, 255, 0.8);\n            color: #fff;\n            font-weight: 600;\n            border: 0;\n            border-radius: 12px;\n            display: flex;\n            margin-right: auto;\n            cursor:pointer;\n        }   \n        \n        a:visited {\n            color: #000 !important;\n        }\n        \n        .chose_box-btn{\n            text-decoration: none;\n            color: #000;\n            font-weight: 600;\n            font-size: 16px;\n            display: block;\n             font-family: sans-serif;\n\n        }\n        \n        .choose_box-item{\n            margin-bottom: 5px;\n            padding: 8px 12px;\n            transition: .2s;\n        }\n        \n        .choose_box-item:hover{\n            background-color: rgba(70, 0, 255, 0.8);\n           \n        }\n        \n        .choose_box-item:hover a{\n            color: #fff;\n        }\n\n        \n        .choose_box-item:last-child{\n            margin-bottom: 0;\n            border-radius: 0 0 12px 12px;\n        }\n    `;\r\n    div.className = "container_menu";\r\n    div.setAttribute("id", "menu_text");\r\n    style.setAttribute(\'id\', \'menu_style\');\r\n    div.innerHTML = `\n       <button class="btnClose" id="btn">Close</button>\n       <ul class="choose_box">\n          <li class="choose_box-item">\n              <a class="chose_box-btn"  href="#">\n                  ${var1}\n              </a>\n          </li>\n          <li class="choose_box-item">\n              <a class="chose_box-btn" href="#">\n                  ${var2}\n              </a>\n          </li>\n          <li class="choose_box-item">\n              <a class="chose_box-btn" href="#">\n                  ${var3}\n              </a>\n          </li>\n      </ul>\n    `;\r\n    document.body.append(div, style);\r\n};\r\nconst getClickedWord = (selectionStart, value) => {\r\n    let arr = value.split(" ");\r\n    let sum = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n        sum += arr[i].length + 1;\r\n        if (sum > selectionStart) {\r\n            if (arr[i].length < 15) {\r\n                return arr[i].trim();\r\n            }\r\n        }\r\n    }\r\n};\r\nconst handleHTMLElement = (items) => {\r\n    let word = \'\';\r\n    let sentence;\r\n    items.forEach((element) => {\r\n        element.addEventListener("click", (e) => {\r\n            if (e.target.nodeName === "INPUT" || e.target.nodeName === "TEXTAREA") {\r\n                let i = e.currentTarget.selectionStart;\r\n                word = getClickedWord(i, e.target.value);\r\n                sentence = e.target.value.split(\' \');\r\n            }\r\n            else {\r\n                // @ts-ignore\r\n                word = getClickedWord(window.getSelection().focusOffset, e.target.innerText);\r\n                sentence = e.target.innerText.split(\' \');\r\n            }\r\n            if (word) {\r\n                changeWord(sentence, e, word, element);\r\n            }\r\n        });\r\n        element.addEventListener("keypress", (p) => {\r\n            if (p.target.nodeName === "INPUT" || p.target.nodeName === "TEXTAREA") {\r\n                sentence = p.target.value.split(\' \');\r\n            }\r\n            else {\r\n                sentence = p.target.innerText.split(\' \');\r\n            }\r\n            changeWord(sentence, p, word, element);\r\n        });\r\n    });\r\n};\r\nHtmlElements.forEach((i) => {\r\n    handleHTMLElement(i);\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///607\n')}},__webpack_exports__={};__webpack_modules__[607]()})();